class Solution {
public:
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        vector<vector<int>> res;
        dfs(nums, 0, res);
        return res;
    }
    void dfs(vector<int> nums, int start, vector<vector<int>> &res){
        if(start==nums.size()-1) {
            res.push_back(nums);
            return;
        }
        for(int i=start; i<nums.size(); i++){
            if(i==start || nums[i] != nums[start]){
                swap(nums[i], nums[start]);
                dfs(nums, start+1, res);
            }
        }
    }
};
