class Solution {
public:
    vector<vector<string>> partition(string s) {
        vector<vector<string>> res;
        vector<string> path;
        dfs(s, 0, res, path);
        return res;
    }
    void dfs(string &s, int start, vector<vector<string>> &res, vector<string> &path){
        if(start == s.size()){
            res.push_back(path);
            return ;
        }
        for(int i=start; i<s.size(); i++){
            if(isPalindrome(s, start, i)){
                path.push_back(s.substr(start, i-start+1));
                dfs(s, i+1, res, path);
                path.pop_back();
            }
        }
    }
    bool isPalindrome(string&s, int i, int j){
        while(i<j){
            if(s[i++]!=s[j--]) return false;
        }
        return true;
    }
};
