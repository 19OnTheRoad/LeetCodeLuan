# it is absolutely same as 1011.
class Solution:
    def splitArray(self, nums: List[int], m: int) -> int:
        i, j = max(nums), sum(nums)
        while i<j:
            mid = (i+j)//2
            tempSum, count = 0, 1
            for num in nums:
                if tempSum + num > mid:
                    tempSum = num
                    count += 1
                else: 
                    tempSum += num
            if count<=m: j = mid
            else: i = mid + 1
        return i


class Solution {
public:
    int splitArray(vector<int>& nums, int k) {
        int maxNum = INT_MIN, sum = 0;
        for(int num: nums){
            maxNum = max(maxNum, num);
            sum += num;
        }
        if(k==1) return sum;
        int i=maxNum, j = sum;
        while(i<j){
            int mid = (i+j)/2;
            int count = 0, tempSum = 0;
            for(int num: nums){
                tempSum += num;
                if(tempSum>mid){
                    tempSum = num;
                    count++;
                }
            }
            if(count<k) j = mid;
            else i = mid + 1;
        }
        return i;
    }
};
