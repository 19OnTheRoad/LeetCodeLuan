class Solution {
public:
    int calculateMinimumHP(vector<vector<int>>& dun) {
        int m = dun.size(), n = dun[0].size();
        // dp[0][0]: min health point to reach dun[i][j].
        vector<vector<int>> dp(m+1, vector<int>(n+1, INT_MAX));        // dp[i][j]: min healthPoints needed from [i][j] to [m-1][n-1].
        dp[m][n-1] = dp[m-1][n] = 1;
        for(int i=m-1; i>=0; i--){      
            for(int j=n-1; j>=0; j--){
                int need = min(dp[i+1][j], dp[i][j+1]) - dun[i][j];    // here: initialHealth + dun[i][j] = finalHealth   // finalHealth==1
                dp[i][j] = max(1, need);                               // dp[i][j]>=1, for any i, any j.
            }
        }
        return dp[0][0];
    }
};
