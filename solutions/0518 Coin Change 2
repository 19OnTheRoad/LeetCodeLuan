class Solution {
public:
    int change(int target, vector<int>& nums) {
        int n = nums.size();
        vector<vector<int>> dp(n+1, vector<int>(target+1, 0));
        dp[0][0] = 1;
        for(int i=1; i<=n; i++){
            for(int j=0; j<=target; j++){
                if(nums[i-1]<=j) dp[i][j] = dp[i-1][j] + dp[i][j-nums[i-1]];             // the only difference from 494 Target Sum, is dp[i][j-nums[i-1]], 
                                                                                         // where 494 is: dp[i-1][j-nums[i-1]], since every num can be used at most once.
                else dp[i][j] = dp[i-1][j];
            }
        }
        return dp[n][target];
    }
};

class Solution {
public:
    int change(int target, vector<int>& nums) {
        vector<int> dp(target+1, 0);
        dp[0] = 1;
        for(int num: nums){
            for(int i=num; i<=target; i++){
                dp[i] += dp[i-num];
            }
        }
        return dp[target];
    }
};
