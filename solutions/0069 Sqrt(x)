// method 1: binary search.
// time: O(logn).
class Solution {
public:
    int mySqrt(int x) {
        long long j=x, i=1,  mid, m =x;
        while(i<j){
            mid = (i+j)/2;
            if(mid*mid>=m) j = mid;
            else i = mid + 1;
        }
        return i*i>m ? i-1 : i;
    }
};

// method 2: newton.  
// time: O(1).
class Solution {
public:
    int mySqrt(int m) {
        long res = m;
        while (res*res - m > 0)              // f(x) = x^2 - m.     
                                             // x(n+1) = x(n) - f(x(n)) / f'(x(n)) =  = (r(n) + x / r(n)) / 2                   
            res = (res + m/res) / 2;
        return res;
    }
};
