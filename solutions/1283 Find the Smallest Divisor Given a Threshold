class Solution {
public:
    int smallestDivisor(vector<int>& nums, int threshold) {
        int maxNum = 1;
        for(int num: nums){
            maxNum = max(maxNum, num);
        }
        int i = 1, j = maxNum;
        while (i < j) {
            int mid = (i + j) / 2, total = 0;
            for (int num: nums) {
                total += (num - 1) / mid + 1;
            }
            if (total <= threshold) j = mid; 
            else  i = mid + 1;
        }
        return i;
    }
};
class Solution:
    def smallestDivisor(self, nums: List[int], threshold: int) -> int:
        i, j = 1, max(nums)
        while i<j:
            mid = (i+j)//2
            sum = 0
            for num in nums:
                sum += (num-1)//mid + 1
            if sum <= threshold: j = mid
            else: i = mid + 1
        return i
