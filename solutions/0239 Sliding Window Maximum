class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        vector<int> res;
        int n = nums.size();
        deque<int> dq;      // store index.
        for(int i=0; i<n; i++){
            while(!dq.empty() && nums[dq.back()]<nums[i]){     // pop_back()  for the index of num < nums[i].
                dq.pop_back();
            }
            while(!dq.empty() && i-dq.front()+1>k){            // pop_front() for the index out of the range [i-k+1, i].
                dq.pop_front();
            }
            dq.push_back(i);
            if(i>=k-1) res.push_back(nums[dq.front()]);        // dq.front() is the max num of the current range.
        }
        return res;
    }
};
